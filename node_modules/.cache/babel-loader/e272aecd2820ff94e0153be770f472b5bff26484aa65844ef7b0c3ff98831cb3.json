{"ast":null,"code":"var _jsxFileName = \"/home/aldan/Desktop/projects/Lush Void/tokenquill/github/TulpaTalk/src/components/CodeBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CodeBlock({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) {\n  _s();\n  const code = inline ? children : node.children[0].value;\n  const language = className ? className.replace('language-', '') : null;\n  const [isClicked, setIsClicked] = useState(false);\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n    setIsClicked(true);\n    setTimeout(() => setIsClicked(false), 1000); // Reset after 1.5 seconds\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-block-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: copyToClipboard,\n      className: `copy-button ${isClicked ? 'clicked' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), isClicked && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: language,\n      className: \"code-block\",\n      customStyle: {},\n      children: String(code).replace(/\\n$/, '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeBlock, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n_c = CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useState","Light","SyntaxHighlighter","docco","ContentCopyIcon","jsxDEV","_jsxDEV","CodeBlock","node","inline","className","children","props","_s","code","value","language","replace","isClicked","setIsClicked","copyToClipboard","navigator","clipboard","writeText","setTimeout","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","customStyle","String","_c","$RefreshReg$"],"sources":["/home/aldan/Desktop/projects/Lush Void/tokenquill/github/TulpaTalk/src/components/CodeBlock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport '../App.css';\n\nexport function CodeBlock({ node, inline, className, children, ...props }) {\n  const code = inline ? children : node.children[0].value;\n  const language = className ? className.replace('language-', '') : null;\n  const [isClicked, setIsClicked] = useState(false);\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n    setIsClicked(true);\n    setTimeout(() => setIsClicked(false), 1000); // Reset after 1.5 seconds\n  };\n\n  return (\n    <div className=\"code-block-container\">\n      <button\n        onClick={copyToClipboard}\n        className={`copy-button ${isClicked ? 'clicked' : ''}`}\n      >\n        <ContentCopyIcon fontSize=\"medium\" />\n        {isClicked && <p>Copied!</p>}\n      </button>\n      <SyntaxHighlighter\n        language={language}\n        className=\"code-block\"\n        customStyle={{}}\n      >\n        {String(code).replace(/\\n$/, '')}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,KAAK,QAAQ,+CAA+C;AACrE,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,OAAO,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzE,MAAMC,IAAI,GAAGL,MAAM,GAAGE,QAAQ,GAAGH,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACI,KAAK;EACvD,MAAMC,QAAQ,GAAGN,SAAS,GAAGA,SAAS,CAACO,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,IAAI;EACtE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACT,IAAI,CAAC;IACnCK,YAAY,CAAC,IAAI,CAAC;IAClBK,UAAU,CAAC,MAAML,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC;;EAED,oBACEb,OAAA;IAAKI,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCL,OAAA;MACEmB,OAAO,EAAEL,eAAgB;MACzBV,SAAS,EAAG,eAAcQ,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;MAAAP,QAAA,gBAEvDL,OAAA,CAACF,eAAe;QAACsB,QAAQ,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACpCZ,SAAS,iBAAIZ,OAAA;QAAAK,QAAA,EAAG;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACTxB,OAAA,CAACJ,iBAAiB;MAChBc,QAAQ,EAAEA,QAAS;MACnBN,SAAS,EAAC,YAAY;MACtBqB,WAAW,EAAE,CAAC,CAAE;MAAApB,QAAA,EAEfqB,MAAM,CAAClB,IAAI,CAAC,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACjB,EAAA,CA7BeN,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}