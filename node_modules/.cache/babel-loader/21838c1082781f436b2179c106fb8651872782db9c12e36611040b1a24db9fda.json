{"ast":null,"code":"var _jsxFileName = \"/home/aldan/Desktop/projects/Lush Void/tokenquill/github/TulpaTalk/src/components/ChatHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { CodeBlock } from './CodeBlock';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction transformCodeInput(text) {\n  if (typeof text !== 'string') {\n    if (text === undefined) {\n      console.warn('Received undefined as input for transformCodeInput');\n      return '';\n    }\n    console.error('Expected a string as input for transformCodeInput:', text);\n    return '';\n  }\n  const codeRegex = /code\\('(.+?)'\\)/g;\n  return text.replace(codeRegex, '```$1```');\n}\nfunction ChatHistory({\n  chatHistory,\n  isLoading,\n  updateChatHistory\n}) {\n  _s();\n  const chatBoxRef = useRef(null);\n  const previousMessageIds = useRef(chatHistory.map(message => message.timestamp));\n  const intervalIdRef = useRef(null);\n  const handleCopyClick = text => {\n    navigator.clipboard.writeText(text);\n  };\n  const scrollToBottom = () => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  };\n  useLayoutEffect(() => {\n    const hasNewMessage = chatHistory.length > previousMessageIds.current.length;\n    const hasUpdatedMessage = chatHistory.some((message, index) => {\n      return message.timestamp !== previousMessageIds.current[index];\n    });\n    if (hasNewMessage || hasUpdatedMessage) {\n      scrollToBottom();\n    }\n\n    // Update the previousMessageIds ref for the next render\n    previousMessageIds.current = chatHistory.map(message => message.timestamp);\n  }, [chatHistory]);\n  useEffect(() => {\n    if (isLoading && intervalIdRef.current === null) {\n      intervalIdRef.current = setInterval(scrollToBottom, 6000);\n    } else if (!isLoading && intervalIdRef.current !== null) {\n      clearInterval(intervalIdRef.current);\n      intervalIdRef.current = null;\n    }\n    return () => {\n      if (intervalIdRef.current !== null) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chatBoxRef,\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invisible-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), chatHistory.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.role === 'user' ? 'user' : 'bot'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-actions\",\n        children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n          className: \"copy-button-2\",\n          onClick: () => handleCopyClick(message.content),\n          style: {\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          components: {\n            code: CodeBlock\n          },\n          children: transformCodeInput(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, message.timestamp, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message bot\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"typing-dot\",\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"typing-dot\",\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"typing-dot\",\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatHistory, \"p6M8jLcOIC3lIqex2orbIMD/Rik=\");\n_c = ChatHistory;\nexport default ChatHistory;\nvar _c;\n$RefreshReg$(_c, \"ChatHistory\");","map":{"version":3,"names":["React","useLayoutEffect","useRef","useEffect","ReactMarkdown","CodeBlock","ContentCopyIcon","jsxDEV","_jsxDEV","transformCodeInput","text","undefined","console","warn","error","codeRegex","replace","ChatHistory","chatHistory","isLoading","updateChatHistory","_s","chatBoxRef","previousMessageIds","map","message","timestamp","intervalIdRef","handleCopyClick","navigator","clipboard","writeText","scrollToBottom","current","scrollTop","scrollHeight","hasNewMessage","length","hasUpdatedMessage","some","index","setInterval","clearInterval","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","content","style","cursor","components","code","_c","$RefreshReg$"],"sources":["/home/aldan/Desktop/projects/Lush Void/tokenquill/github/TulpaTalk/src/components/ChatHistory.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { CodeBlock } from './CodeBlock';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nfunction transformCodeInput(text) {\n  if (typeof text !== 'string') {\n    if (text === undefined) {\n      console.warn('Received undefined as input for transformCodeInput');\n      return '';\n    }\n    console.error('Expected a string as input for transformCodeInput:', text);\n    return '';\n  }\n  const codeRegex = /code\\('(.+?)'\\)/g;\n  return text.replace(codeRegex, '```$1```');\n}\n\n\nfunction ChatHistory({ chatHistory, isLoading, updateChatHistory }) {\n  const chatBoxRef = useRef(null);\n  const previousMessageIds = useRef(chatHistory.map(message => message.timestamp));\n  const intervalIdRef = useRef(null);\n\n  const handleCopyClick = (text) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  const scrollToBottom = () => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  };\n\n  useLayoutEffect(() => {\n    const hasNewMessage = chatHistory.length > previousMessageIds.current.length;\n    const hasUpdatedMessage = chatHistory.some((message, index) => {\n      return message.timestamp !== previousMessageIds.current[index];\n    });\n\n    if (hasNewMessage || hasUpdatedMessage) {\n      scrollToBottom();\n    }\n\n    // Update the previousMessageIds ref for the next render\n    previousMessageIds.current = chatHistory.map(message => message.timestamp);\n  }, [chatHistory]);\n\n  useEffect(() => {\n    if (isLoading && intervalIdRef.current === null) {\n      intervalIdRef.current = setInterval(scrollToBottom, 6000);\n    } else if (!isLoading && intervalIdRef.current !== null) {\n      clearInterval(intervalIdRef.current);\n      intervalIdRef.current = null;\n    }\n\n    return () => {\n      if (intervalIdRef.current !== null) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, [isLoading]);\n\n\n  return (\n    <div ref={chatBoxRef} className=\"chat-box\">\n      <div className=\"invisible-element\" />\n      {chatHistory.map((message) => (\n        <div key={message.timestamp} className={`message ${message.role === 'user' ? 'user' : 'bot'}`}>\n          <div className=\"message-actions\">\n            <ContentCopyIcon className=\"copy-button-2\" onClick={() => handleCopyClick(message.content)} style={{ cursor: 'pointer' }} />\n          </div>\n          <div className=\"message-content\">\n            <ReactMarkdown\n              components={{\n                code: CodeBlock,\n              }}\n            >\n              {transformCodeInput(message.content)}\n            </ReactMarkdown>\n          </div>\n        </div>\n      ))}\n\n      {isLoading && <div className=\"message bot\">\n          <span className=\"typing-dot\">.</span>\n          <span className=\"typing-dot\">.</span>\n          <span className=\"typing-dot\">.</span>\n        </div>}\n    </div>\n  );\n}\n\nexport default ChatHistory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}